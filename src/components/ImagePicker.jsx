import React, { useCallback, useEffect, useState } from "react";
import { useDropzone } from "react-dropzone";
import "./ImagePicker.scss";
import classNames from "classnames";
import PropTypes from "prop-types";

function ImagePicker({ onChange, className, ...props }) {
  const [selectedFile, setSelectedFile] = useState(null);
  const computedClassName = classNames("imagepicker", className);

  const onDrop = useCallback((acceptedFiles) => {
    const selection = {
      file: acceptedFiles[0],
      ourl: URL.createObjectURL(acceptedFiles[0]),
    };
    setSelectedFile(selection);
    onChange(selection);
  }, []);

  useEffect(() => {
    console.log("files", selectedFile);
  }, [selectedFile]);
  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    accept: {
      "image/jpeg": [],
      "image/png": [],
      "image/webp": [],
      "image/heic": [],
      "image/jfif": [],
    },
  });

  return (
    <div {...getRootProps()} className={computedClassName}>
      <input {...getInputProps()} />
      {isDragActive ? (
        <p>Drop the image here ...</p>
      ) : (
        <div className="imagepicker-content">
          <svg
            width="33"
            height="32"
            viewBox="0 0 33 32"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M2.5 8C2.5 7.20435 2.81607 6.44129 3.37868 5.87868C3.94129 5.31607 4.70435 5 5.5 5H27.5C28.2957 5 29.0587 5.31607 29.6213 5.87868C30.1839 6.44129 30.5 7.20435 30.5 8V24C30.5 24.7957 30.1839 25.5587 29.6213 26.1213C29.0587 26.6839 28.2957 27 27.5 27H5.5C4.70435 27 3.94129 26.6839 3.37868 26.1213C2.81607 25.5587 2.5 24.7957 2.5 24V8ZM4.5 21.4133V24C4.5 24.552 4.948 25 5.5 25H27.5C27.7652 25 28.0196 24.8946 28.2071 24.7071C28.3946 24.5196 28.5 24.2652 28.5 24V21.4133L24.9133 17.828C24.5383 17.4535 24.03 17.2431 23.5 17.2431C22.97 17.2431 22.4617 17.4535 22.0867 17.828L20.9133 19L22.2067 20.2933C22.3049 20.3849 22.3837 20.4953 22.4384 20.6179C22.493 20.7406 22.5224 20.873 22.5248 21.0073C22.5272 21.1416 22.5025 21.2749 22.4522 21.3995C22.4019 21.524 22.327 21.6371 22.2321 21.7321C22.1371 21.827 22.024 21.9019 21.8995 21.9522C21.7749 22.0025 21.6416 22.0272 21.5073 22.0248C21.373 22.0224 21.2406 21.993 21.118 21.9384C20.9953 21.8837 20.8849 21.8049 20.7933 21.7067L13.9133 14.828C13.5383 14.4535 13.03 14.2431 12.5 14.2431C11.97 14.2431 11.4617 14.4535 11.0867 14.828L4.5 21.4147V21.4133ZM18 11C18 10.6022 18.158 10.2206 18.4393 9.93934C18.7206 9.65804 19.1022 9.5 19.5 9.5C19.8978 9.5 20.2794 9.65804 20.5607 9.93934C20.842 10.2206 21 10.6022 21 11C21 11.3978 20.842 11.7794 20.5607 12.0607C20.2794 12.342 19.8978 12.5 19.5 12.5C19.1022 12.5 18.7206 12.342 18.4393 12.0607C18.158 11.7794 18 11.3978 18 11Z"
              fill="#343037"
            />
          </svg>
          <p>
            {selectedFile && selectedFile.file ? (
              <>
                {selectedFile.file.name}
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setSelectedFile(null);
                    return false;
                  }}
                >
                  <path
                    d="M5 3.25V4H2.75C2.55109 4 2.36032 4.07902 2.21967 4.21967C2.07902 4.36032 2 4.55109 2 4.75C2 4.94891 2.07902 5.13968 2.21967 5.28033C2.36032 5.42098 2.55109 5.5 2.75 5.5H3.05L3.865 13.65C3.90218 14.0199 4.0754 14.3628 4.35107 14.6123C4.62675 14.8617 4.98523 14.9999 5.357 15H10.642C11.0139 15.0001 11.3727 14.8621 11.6486 14.6126C11.9244 14.3631 12.0978 14.0201 12.135 13.65L12.95 5.5H13.25C13.4489 5.5 13.6397 5.42098 13.7803 5.28033C13.921 5.13968 14 4.94891 14 4.75C14 4.55109 13.921 4.36032 13.7803 4.21967C13.6397 4.07902 13.4489 4 13.25 4H11V3.25C11 2.65326 10.7629 2.08097 10.341 1.65901C9.91903 1.23705 9.34674 1 8.75 1H7.25C6.65326 1 6.08097 1.23705 5.65901 1.65901C5.23705 2.08097 5 2.65326 5 3.25ZM7.25 2.5C7.05109 2.5 6.86032 2.57902 6.71967 2.71967C6.57902 2.86032 6.5 3.05109 6.5 3.25V4H9.5V3.25C9.5 3.05109 9.42098 2.86032 9.28033 2.71967C9.13968 2.57902 8.94891 2.5 8.75 2.5H7.25ZM6.05 6C6.14852 5.99502 6.24705 6.00952 6.33996 6.04268C6.43286 6.07584 6.51832 6.127 6.59142 6.19323C6.66453 6.25946 6.72385 6.33946 6.76599 6.42865C6.80813 6.51784 6.83226 6.61447 6.837 6.713L7.112 12.213C7.11933 12.4101 7.04872 12.6022 6.91546 12.7476C6.7822 12.893 6.59702 12.9801 6.40002 12.9899C6.20302 12.9998 6.01007 12.9317 5.86295 12.8003C5.71583 12.6689 5.62639 12.4849 5.614 12.288L5.339 6.788C5.33388 6.68956 5.34821 6.59107 5.38118 6.49818C5.41416 6.40528 5.46511 6.3198 5.53115 6.24661C5.59718 6.17343 5.677 6.11397 5.76603 6.07166C5.85506 6.02934 5.95155 6.00499 6.05 6ZM9.95 6C10.0484 6.00487 10.145 6.02909 10.234 6.07129C10.3231 6.11349 10.403 6.17283 10.4691 6.24592C10.5353 6.31901 10.5863 6.40442 10.6194 6.49726C10.6525 6.59011 10.667 6.68856 10.662 6.787L10.387 12.287C10.3746 12.4839 10.2852 12.6679 10.138 12.7993C9.99093 12.9307 9.79798 12.9988 9.60098 12.9889C9.40398 12.9791 9.2188 12.892 9.08554 12.7466C8.95228 12.6012 8.88167 12.4091 8.889 12.212L9.164 6.712C9.17409 6.51354 9.26253 6.32719 9.4099 6.19389C9.55727 6.06058 9.75152 5.99021 9.95 6Z"
                    fill="black"
                  />
                </svg>
              </>
            ) : (
              "Image"
            )}
          </p>
        </div>
      )}
    </div>
  );
}

ImagePicker.propTypes = {
    onChange: PropTypes.func,
    className: PropTypes.string,
}


export default ImagePicker;
